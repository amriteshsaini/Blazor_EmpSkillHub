@page "/skills"
@using EmpSkillHub.Data.Models
@using EmpSkillHub.Service.Interfaces
@inject ISkillService SkillService

<h3>Add New Skill</h3>

<EditForm Model="skill" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Skill Name</label>
        <InputText class="form-control" @bind-Value="skill.Name" />
    </div>

    <button type="submit" class="btn btn-primary">Add Skill</button>
</EditForm>

<h3>Skill List</h3>

@if (skills == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var skill in skills)
            {
                <tr>
                    <td>@skill.Name</td>
                </tr>
            }
        </tbody>
    </table>
}

@if (message != null)
{
    <div class="alert alert-success mt-2">@message</div>
}

@code {
    private Skill skill = new Skill();
    private string? message;
    private List<Skill> skills; 
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        skills = (await SkillService.GetAllSkillsAsync()).ToList();
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            await SkillService.AddSkillsAsync(skill);
            message = $"Skill '{skill.Name}' added successfully!";
            skill = new Skill();
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }
}
